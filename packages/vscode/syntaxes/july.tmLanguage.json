{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "july",
  "patterns": [
    { "include": "#forStmt" },
    { "include": "#ifStmt" },
    { "include": "#elseBranch" },
    { "include": "#components" },
    { "include": "#exprBrace" }
  ],
  "repository": {
    "components": {
      "name": "july.component",
      "begin": "^\\s*([_a-zA-Z0-9]+)([^\\n]*)",
      "end": "\\n",
      "beginCaptures": {
        "1": {
          "patterns": [
            {
              "name": "entity.name.tag.html",
              "match": "\\b(a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|blockquote|br|button|canvas|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|header|hr|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|meter|nav|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|s|samp|section|select|small|source|span|strong|sub|summary|sup|svg|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr)\\b"
            },
            {
              "name": "entity.name.type.class.js",
              "match": "\\b([A-Z]\\w+)\\b"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#attribute"
            },
            {
              "include": "#subNodeAttr"
            }
          ]
        }
      }
    },
    "attribute": {
      "begin": "([_a-zA-Z0-9]+)",
      "end": "(?:\\s*(=)\\s*(\\{[^}]*?\\}|\\\"[^\"]*?\\\"|'[^']*?'))?",
      "beginCaptures": {
        "1": {
          "patterns": [
            {
              "name": "entity.other.attribute-name.js",
              "match": "[_a-zA-Z0-9]+"
            }
          ]
        }
      },
      "endCaptures": {
        "1": { "name": "keyword.operator.assignment" },
        "2": {
          "patterns": [{ "include": "#exprBrace" }]
        }
      }
    },
    "subNodeAttr": {
      "begin": "\\{[^}]*?\\}",
      "end": "\\b",
      "beginCaptures": {
        "0": {
          "patterns": [{ "include": "#exprBrace" }]
        }
      }
    },
    "forStmt": {
      "name": "july.statement.for",
      "begin": "^\\s*(for)\\s+(?:([a-zA-Z0-9_.]+)(?:(,)([a-zA-Z0-9_.]+))?)\\s+(in)\\s+([^\\n]+)[ \\t]*",
      "end": "\\n",
      "beginCaptures": {
        "1": { "name": "keyword.control.july" },
        "2": { "name": "variable.other.object.js" },
        "3": { "name": "punctuation.separator.comma.js" },
        "4": { "name": "variable.other.object.js" },
        "5": { "name": "keyword.control.july" },
        "6": { "patterns": [{ "include": "#expr" }] }
      }
    },
    "ifStmt": {
      "name": "july.statement.if",
      "begin": "^\\s*(if|elf)(?:\\s+([^\\n]+))",
      "end": "\\n",
      "beginCaptures": {
        "1": { "name": "keyword.control.july" },
        "2": { "patterns": [{ "include": "#expr" }] }
      }
    },
    "elseBranch": {
      "name": "july.statement.else",
      "begin": "^\\s*(else)[ \\t]*",
      "end": "\\n",
      "beginCaptures": {
        "1": { "name": "keyword.control.july" }
      }
    },
    "exprBrace": {
      "begin": "\\{",
      "end": "\\}",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.embedded.begin"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.embedded.end"
        }
      },
      "patterns": [{ "include": "#expr" }]
    },
    "expr": {
      "name": "july.expression",
      "patterns": [
        { "include": "#string" },
        { "include": "#funCall" },
        { "include": "#identifier" },
        { "include": "#operators" }
      ]
    },
    "identifier": {
      "name": "variable.other.js",
      "match": "\\b[a-zA-Z0-9_]+\\b"
    },
    "funCall": {
      "name": "july.expression.funCall",
      "begin": "([a-zA-Z_0-9]+)\\s*(\\()([^)]*)",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "entity.name.function.js" },
        "2": { "name": "keyword.operator.js" },
        "3": { "patterns": [{ "include": "#expr" }] }
      },
      "endCaptures": {
        "0": { "name": "keyword.operator.js" }
      }
    },
    "operators": {
      "name": "july.operators",
      "patterns": [
        {
          "name": "keyword.operator.relational.js",
          "match": "<=|>=|<>|<|>"
        },
        {
          "name": "keyword.operator.logical.js",
          "match": "\\!|&&|\\|\\|"
        },
        {
          "name": "keyword.operator.arithmetic.js",
          "match": "%|\\*|/|-|\\+"
        },
        {
          "name": "keyword.operator.js",
          "match": "\\(|\\)|,|\\."
        },
        {
          "name": "keyword.operator.ternary",
          "match": "\\?|:"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "include": "#string-single"
        },
        {
          "include": "#string-double"
        }
      ]
    },
    "string-character-escape": {
      "name": "constant.character.escape.js.jsx",
      "match": "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
    },
    "string-single": {
      "name": "string.quoted.single.july",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "string-double": {
      "name": "string.quoted.double.july",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    }
  },
  "scopeName": "source.july"
}
